{"version":3,"sources":["webpack:///../components/checkbox/Checkbox.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Checkbox","__position","__code","__scope","Button","Playground","Props","className","checked","disabled","style","marginTop","Example","state","setCheck","bind","setUncheck","setDisabled","setUndisabled","this","setState","render","onClick","size","React","isMDXComponent"],"mappings":"6pBAUO,IAAMA,EAAe,Q,kNAENC,EAKQ,UAL9B,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,YAIA,iBAAQ,CACN,GAAM,kBADR,mBAGA,YAAC,IAAD,CAAOC,GAAIC,IAAUF,QAAQ,UAC7B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,qYAAwYC,SAAO,GAChbN,QACAH,kBACAM,aACAI,WACAC,eACAC,WANgb,gBAOhbZ,IAPgb,EAQhbJ,eARgb,GAS/aQ,QAAQ,cACX,YAAC,IAAD,CAAUS,UAAU,kBAAkBT,QAAQ,YAA9C,oBAGA,uBACA,YAAC,IAAD,CAAUU,SAAO,EAACV,QAAQ,YAA1B,oBAGA,uBACA,YAAC,IAAD,CAAUW,UAAQ,EAACX,QAAQ,YAA3B,qBAGA,uBACE,YAAC,IAAD,CAAUW,UAAQ,EAACD,SAAO,EAACV,QAAQ,YAAnC,iCAGA,uBACA,YAAC,IAAD,CAAUY,MAAO,CACfC,UAAW,QACVH,SAAO,EAACV,QAAQ,YAFnB,qCAMF,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,81CAAu2CC,SAAO,GAC/4CN,QACAH,kBACAM,aACAI,WACAC,eACAC,WAN+4C,gBAO/4CZ,IAP+4C,EAQ/4CJ,eAR+4C,GAS94CQ,QAAQ,eACR,WAAM,IACCc,EADD,Y,QAEH,WAAYf,GAAO,aACjB,cAAMA,IAAN,MACKgB,MAAQ,CACXJ,UAAU,EACVD,SAAS,GAEX,EAAKM,SAAW,EAAKA,SAASC,KAAd,MAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,MAClB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,MACnB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,MATJ,E,EAFhB,G,EAAA,G,6EAAA,2BAcHD,SAAA,WACEK,KAAKC,SAAS,CACZZ,SAAS,KAhBV,EAoBHQ,WAAA,WACEG,KAAKC,SAAS,CACZZ,SAAS,KAtBV,EA0BHS,YAAA,WACEE,KAAKC,SAAS,CACZX,UAAU,KA5BX,EAgCHS,cAAA,WACEC,KAAKC,SAAS,CACZX,UAAU,KAlCX,EAsCHY,OAAA,WACE,OAAO,4BACH,YAAC,IAAD,CAAUZ,SAAUU,KAAKN,MAAMJ,SAAUD,QAASW,KAAKN,MAAML,QAASV,QAAQ,YAA9E,sBAEW,uBAAM,uBACjB,YAAC,IAAD,CAAQwB,QAASH,KAAKL,SAAUS,KAAK,IAAIzB,QAAQ,UAAjD,MACA,YAAC,IAAD,CAAQwB,QAASH,KAAKH,WAAYO,KAAK,IAAIzB,QAAQ,UAAnD,QACA,YAAC,IAAD,CAAQwB,QAASH,KAAKF,YAAaM,KAAK,IAAIzB,QAAQ,UAApD,YACA,YAAC,IAAD,CAAQwB,QAASH,KAAKD,cAAeK,KAAK,IAAIzB,QAAQ,UAAtD,gBA9CH,GACiB0B,aAmDtB,OAAO,YAACZ,EAAD,CAASd,QAAQ,qB,gNAOhCH,EAAW8B,gBAAiB","file":"component---components-checkbox-checkbox-mdx-e7c0a180d73cfccdb57b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"D:/Files/Tencent/imui-Docz/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Checkbox from './index';\nimport Button from '../button/index';\nimport { Playground, Props } from 'docz';\nimport './style/index.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"单checkbox展示\"\n    }}>{`单checkbox展示`}</h2>\n    <Playground __position={1} __code={'<Checkbox className=\\\"class-name-test\\\">checkbox default</Checkbox>\\n<br />\\n<Checkbox checked>checkbox checked</Checkbox>\\n<br />\\n<Checkbox disabled>checkbox disabled</Checkbox>\\n<br />\\n<Checkbox disabled checked>\\n  checkbox disabled and checked\\n</Checkbox>\\n<br />\\n<Checkbox\\n  style={{\\n    marginTop: \\'20px\\',\\n  }}\\n  checked\\n>\\n  checkbox style reset and checked\\n</Checkbox>'} __scope={{\n      props,\n      DefaultLayout,\n      Checkbox,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Checkbox className=\"class-name-test\" mdxType=\"Checkbox\">\n    checkbox default\n    </Checkbox>\n    <br />\n    <Checkbox checked mdxType=\"Checkbox\">\n    checkbox checked\n    </Checkbox>\n    <br />\n    <Checkbox disabled mdxType=\"Checkbox\">\n    checkbox disabled\n    </Checkbox>\n    <br />\n      <Checkbox disabled checked mdxType=\"Checkbox\">\ncheckbox disabled and checked\n      </Checkbox>\n      <br />\n      <Checkbox style={{\n        marginTop: '20px'\n      }} checked mdxType=\"Checkbox\">\ncheckbox style reset and checked\n      </Checkbox>\n    </Playground>\n    <h2 {...{\n      \"id\": \"单checkbox控制\"\n    }}>{`单checkbox控制`}</h2>\n    <Playground __position={2} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        disabled: false,\\n        checked: false,\\n      }\\n      this.setCheck = this.setCheck.bind(this)\\n      this.setUncheck = this.setUncheck.bind(this)\\n      this.setDisabled = this.setDisabled.bind(this)\\n      this.setUndisabled = this.setUndisabled.bind(this)\\n    }\\n    setCheck() {\\n      this.setState({ checked: true })\\n    }\\n    setUncheck() {\\n      this.setState({ checked: false })\\n    }\\n    setDisabled() {\\n      this.setState({ disabled: true })\\n    }\\n    setUndisabled() {\\n      this.setState({ disabled: false })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Checkbox\\n            disabled={this.state.disabled}\\n            checked={this.state.checked}\\n          >\\n            点击下面按钮操控checkbox状态\\n          </Checkbox>\\n          <br />\\n          <br />\\n          <Button onClick={this.setCheck} size=\\\"s\\\">\\n            选中\\n          </Button>\\n          <Button onClick={this.setUncheck} size=\\\"s\\\">\\n            取消选中\\n          </Button>\\n          <Button onClick={this.setDisabled} size=\\\"s\\\">\\n            disabled\\n          </Button>\\n          <Button onClick={this.setUndisabled} size=\\\"s\\\">\\n            取消disabled\\n          </Button>\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Checkbox,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              disabled: false,\n              checked: false\n            };\n            this.setCheck = this.setCheck.bind(this);\n            this.setUncheck = this.setUncheck.bind(this);\n            this.setDisabled = this.setDisabled.bind(this);\n            this.setUndisabled = this.setUndisabled.bind(this);\n          }\n\n          setCheck() {\n            this.setState({\n              checked: true\n            });\n          }\n\n          setUncheck() {\n            this.setState({\n              checked: false\n            });\n          }\n\n          setDisabled() {\n            this.setState({\n              disabled: true\n            });\n          }\n\n          setUndisabled() {\n            this.setState({\n              disabled: false\n            });\n          }\n\n          render() {\n            return <>\n                <Checkbox disabled={this.state.disabled} checked={this.state.checked} mdxType=\"Checkbox\">\n                    点击下面按钮操控checkbox状态\n                </Checkbox><br /><br />\n                <Button onClick={this.setCheck} size=\"s\" mdxType=\"Button\">选中</Button>\n                <Button onClick={this.setUncheck} size=\"s\" mdxType=\"Button\">取消选中</Button>\n                <Button onClick={this.setDisabled} size=\"s\" mdxType=\"Button\">disabled</Button>\n                <Button onClick={this.setUndisabled} size=\"s\" mdxType=\"Button\">取消disabled</Button>\n                </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}